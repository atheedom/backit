/**
 * This class is generated by jOOQ
 */
package je.backit.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.3"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Funding extends org.jooq.impl.TableImpl<je.backit.jooq.tables.records.FundingRecord> {

	private static final long serialVersionUID = 148046315;

	/**
	 * The reference instance of <code>public.funding</code>
	 */
	public static final je.backit.jooq.tables.Funding FUNDING = new je.backit.jooq.tables.Funding();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<je.backit.jooq.tables.records.FundingRecord> getRecordType() {
		return je.backit.jooq.tables.records.FundingRecord.class;
	}

	/**
	 * The column <code>public.funding.id</code>.
	 */
	public final org.jooq.TableField<je.backit.jooq.tables.records.FundingRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.funding.donor_id</code>.
	 */
	public final org.jooq.TableField<je.backit.jooq.tables.records.FundingRecord, java.lang.Integer> DONOR_ID = createField("donor_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.funding.campaign_id</code>.
	 */
	public final org.jooq.TableField<je.backit.jooq.tables.records.FundingRecord, java.lang.Integer> CAMPAIGN_ID = createField("campaign_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.funding.funding_amount</code>.
	 */
	public final org.jooq.TableField<je.backit.jooq.tables.records.FundingRecord, java.math.BigDecimal> FUNDING_AMOUNT = createField("funding_amount", org.jooq.impl.SQLDataType.NUMERIC.precision(20, 2), this, "");

	/**
	 * The column <code>public.funding.funding_date</code>.
	 */
	public final org.jooq.TableField<je.backit.jooq.tables.records.FundingRecord, java.sql.Timestamp> FUNDING_DATE = createField("funding_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * Create a <code>public.funding</code> table reference
	 */
	public Funding() {
		this("funding", null);
	}

	/**
	 * Create an aliased <code>public.funding</code> table reference
	 */
	public Funding(java.lang.String alias) {
		this(alias, je.backit.jooq.tables.Funding.FUNDING);
	}

	private Funding(java.lang.String alias, org.jooq.Table<je.backit.jooq.tables.records.FundingRecord> aliased) {
		this(alias, aliased, null);
	}

	private Funding(java.lang.String alias, org.jooq.Table<je.backit.jooq.tables.records.FundingRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, je.backit.jooq.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<je.backit.jooq.tables.records.FundingRecord, java.lang.Integer> getIdentity() {
		return je.backit.jooq.Keys.IDENTITY_FUNDING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<je.backit.jooq.tables.records.FundingRecord> getPrimaryKey() {
		return je.backit.jooq.Keys.FUNDING_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<je.backit.jooq.tables.records.FundingRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<je.backit.jooq.tables.records.FundingRecord>>asList(je.backit.jooq.Keys.FUNDING_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<je.backit.jooq.tables.records.FundingRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<je.backit.jooq.tables.records.FundingRecord, ?>>asList(je.backit.jooq.Keys.FUNDING__FUNDING_DONOR_ID_FKEY, je.backit.jooq.Keys.FUNDING__FUNDING_CAMPAIGN_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public je.backit.jooq.tables.Funding as(java.lang.String alias) {
		return new je.backit.jooq.tables.Funding(alias, this);
	}

	/**
	 * Rename this table
	 */
	public je.backit.jooq.tables.Funding rename(java.lang.String name) {
		return new je.backit.jooq.tables.Funding(name, null);
	}
}
